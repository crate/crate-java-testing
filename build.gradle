buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.owasp:dependency-check-gradle:5.3.0'
    }
}

plugins {
    id 'idea'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

description = 'Crate Testing'
group = "io.crate"
project.version = "$version"

repositories {
    mavenCentral()
}

dependencies {
    api "junit:junit:$junitVersion"
    implementation "org.apache.commons:commons-compress:$commons_compressVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"

    testImplementation ("com.carrotsearch.randomizedtesting:randomizedtesting-runner:$randomizedTestingVersion") {
        exclude group: 'junit', module: 'junit'
    }
}

apply plugin: 'org.owasp.dependencycheck'

tasks.withType(JavaCompile) {
    sourceCompatibility = "11"
    targetCompatibility = "11"
}

test {
    if (project.hasProperty('maxParallelForks'))
        maxParallelForks = project.maxParallelForks as int
}

idea {
    project {
        languageLevel = 'JDK_11'

        ipr {
            withXml { provider ->
                def node = provider.asNode()
                def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }
                copyrightManager.@default = "CrateASL2"
                def aslCopyright = copyrightManager.copyright.find { it.option.find { it.@name == "myName" }?.@value == "CrateASL2" }
                if (aslCopyright == null) {
                    copyrightManager.append(new XmlParser().parse(file("copyright.xml")))
                }
            }
        }
    }
}

wrapper {
    gradleVersion = '7.0'
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
    test {
        resources {
            srcDir 'src/test/java'
            include '**/*.tar.gz'
        }
    }
}

jar {
    archiveBaseName = 'crate-testing'
    manifest {
        attributes(
            "Implementation-Title": "Crate.IO Testing",
            "Implementation-Version": project.version
        )
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = 'io.crate'
            artifactId = 'crate-testing'
            from components.java

            pom {
                name = 'crate-testing'
                description = 'Test layer for CrateDB'
                url = 'https://github.com/crate/crate-java-testing'
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/license/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'crate'
                        name = 'Crate Developers'
                        email = 'office@crate.io'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/crate/crate-java-testing.git'
                    developerConnection = 'scm:git:ssh:git@github.com:crate/crate-java-testing.git'
                    url = 'https://github.com/crate/crate-java-testing'
                }
            }
        }
    }
    repositories {
        maven {
            url = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = project.hasProperty('sonatypeUsername') ? sonatypeUsername : ""
                password = project.hasProperty('sonatypePassword') ? sonatypePassword : ""
            }
        }
    }
}
